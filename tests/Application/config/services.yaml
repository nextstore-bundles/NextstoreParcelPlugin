# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: en_US

services:
  # Default configuration for services in *this* file
  _defaults:
    # Automatically injects dependencies in your services
    autowire: true

    # Automatically registers your services as commands, event subscribers, etc.
    autoconfigure: true

    # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work
    public: false

  _instanceof:
    Sylius\Bundle\ResourceBundle\Controller\ResourceController:
      autowire: false
    Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
      autowire: false

  # Makes classes in src/ available to be used as services;
  # this creates a service per class whose id is the fully-qualified class name
  Tests\Nextstore\SyliusParcelPlugin\Application\src\:
    resource: "../src/*"
    exclude: "../src/{Entity,Migrations,Tests,Kernel.php}"

  # Controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  Tests\Nextstore\SyliusParcelPlugin\Application\src\Controller\:
    resource: "../src/Controller"
    tags: ["controller.service_arguments"]

  # QPAY
  Payum\Core\Bridge\Symfony\Builder\GatewayFactoryBuilder:
    arguments:
      - '@Tests\Nextstore\SyliusParcelPlugin\Application\src\Gateway\QPayGatewayFactory'
    tags:
      - { name: controller.service_arguments }
      - { name: payum.gateway_factory_builder, factory: qpay_payment }

  app.form.type.qpay_gateway_configuration_type:
    class: Tests\Nextstore\SyliusParcelPlugin\Application\src\Form\Type\QPayGatewayConfigurationType
    tags:
      - {
          name: sylius.gateway_configuration_type,
          type: qpay_payment,
          label: Qpay,
        }
      - { name: form.type }

  Tests\Nextstore\SyliusParcelPlugin\Application\src\Command\Payment\QPayAuthenticateCommand:
    arguments:
      - "@sylius.repository.payment_method"
      - "@doctrine.orm.entity_manager"
      - '@Tests\Nextstore\SyliusParcelPlugin\Application\src\Factory\Payment\QPayFactory'

  app.controller.action.payment.qpay.capture_action:
    class: Tests\Nextstore\SyliusParcelPlugin\Application\src\Controller\Action\Payment\QPay\CaptureAction
    public: true
    tags:
      - { name: payum.action, factory: qpay_payment }
      - { name: controller.service_arguments }
